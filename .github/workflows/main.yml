name: Visa Portal CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Frontend Testing and Building
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run linting
        run: |
          cd frontend
          npm run lint

      - name: Run tests
        run: |
          cd frontend
          npm test -- --coverage --watchAll=false

      - name: Build application
        run: |
          cd frontend
          npm run build

  # Backend Testing
  test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements/development.txt

      - name: Run linting
        run: |
          cd backend
          black --check .
          flake8 .

      - name: Run tests
        run: |
          cd backend
          python manage.py test

  # Bot Services Testing
  test-bots:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bot: [visa_evaluation_bot, document_preparation_bot]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd bots/${{ matrix.bot }}
          pip install -r requirements.txt

      - name: Run tests
        run: |
          cd bots/${{ matrix.bot }}
          pytest

  # Build and Push Docker Images
  build-and-push:
    needs: [test-frontend, test-backend, test-bots]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build Frontend
      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build Backend
      - name: Build and push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build Visa Evaluation Bot
      - name: Build and push Visa Evaluation Bot
        uses: docker/build-push-action@v5
        with:
          context: ./bots/visa_evaluation_bot
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/visa-evaluation-bot:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Build Document Preparation Bot
      - name: Build and push Document Preparation Bot
        uses: docker/build-push-action@v5
        with:
          context: ./bots/document_preparation_bot
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/document-preparation-bot:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Deploy to Kubernetes
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Update image tags in Kubernetes manifests
        run: |
          # Update image tags in deployment files
          sed -i 's|visa-portal/frontend:latest|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/frontend:latest|g' infrastructure/kubernetes/deployments/frontend-deployment.yaml
          sed -i 's|visa-portal/backend:latest|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/backend:latest|g' infrastructure/kubernetes/deployments/backend-deployment.yaml
          sed -i 's|visa-portal/visa-evaluation-bot:latest|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/visa-evaluation-bot:latest|g' infrastructure/kubernetes/deployments/bots-deployment.yaml
          sed -i 's|visa-portal/document-preparation-bot:latest|${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/document-preparation-bot:latest|g' infrastructure/kubernetes/deployments/bots-deployment.yaml

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f infrastructure/kubernetes/namespaces/
          kubectl apply -f infrastructure/kubernetes/configmaps/
          kubectl apply -f infrastructure/kubernetes/secrets/
          kubectl apply -f infrastructure/kubernetes/deployments/
          kubectl apply -f infrastructure/kubernetes/services/
          kubectl apply -f infrastructure/kubernetes/ingress/

      - name: Wait for deployment to complete
        run: |
          kubectl rollout status deployment/frontend -n visa-portal
          kubectl rollout status deployment/backend -n visa-portal
          kubectl rollout status deployment/visa-evaluation-bot -n visa-portal
          kubectl rollout status deployment/document-preparation-bot -n visa-portal

      - name: Run smoke tests
        run: |
          # Add smoke tests here
          echo "Smoke tests completed successfully" 